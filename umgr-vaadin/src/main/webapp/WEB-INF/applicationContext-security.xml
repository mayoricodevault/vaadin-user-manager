<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!-- 
     <jdbc-user-service> configures a built-in JdbcDaoImpl as a source of user details. 
     It loads user detials from predefined database tables using JDBC.
     If you need to customize user lookup, you can create a custom UserDetailsService instead 
     and reference it with user-service-ref. It can be useful in the following cases: 
     * You need a more complex user lookup logic 
     * You want to reuse existing services instead of doing raw JDBC lookups 
     * You want to add extra information to UserDetails objects returned by UserDetailsService 
     * Etc 
     -->
<!-- 	<authentication-manager> -->
<!-- 		<authentication-provider user-service-ref='userService'> -->
<!-- 			<password-encoder hash="sha"> -->
<!-- 				<salt-source user-property="username" /> -->
<!-- 			</password-encoder> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager> -->
  
  
<!--   StandardPasswordEncoder encoder = new StandardPasswordEncoder(); -->
<!--   pwd = encoder.encode(pwd); -->


  
  <beans:bean id="encoder" 
    class="org.springframework.security.crypto.password.StandardPasswordEncoder">
</beans:bean>

<authentication-manager>
    <authentication-provider user-service-ref="userService">
        <password-encoder ref="encoder" />         
    </authentication-provider>
</authentication-manager>
  

	<http pattern="/VAADIN/**" security="none" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/index.jsp" access="permitAll" />
		<intercept-url pattern="/login.jsp" access="permitAll" />
        <intercept-url pattern="/doubleSession.html" access="permitAll" />
		<intercept-url pattern="/app/**" access="hasRole('USER')" />
		<intercept-url pattern="/**" access="denyAll" />
        <session-management invalid-session-url="/login.jsp?session_timeout=1" />
		<form-login login-page='/login.jsp' 
            default-target-url='/app'
			always-use-default-target='true' 
            authentication-failure-url="/login.jsp?login_error=1"/>
		<logout />
    
        <!-- TODO funktioniert noch nicht ... -->
        <!-- Falls ein Benutzer versucht, sich mehrere male anzumelden: -->
        <session-management session-authentication-error-url="/doubleSession.html">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"  />
        </session-management>
	</http>
</beans:beans>
