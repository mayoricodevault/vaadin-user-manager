<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<display-name>umgr Vaadin Web Application</display-name>

<!-- is set by InitalConfigListener -->
<!-- 	<context-param> -->
<!-- 		<description>Vaadin production mode</description> -->
<!-- 		<param-name>productionMode</param-name> -->
<!-- 		<param-value>false</param-value> -->
<!-- 	</context-param> -->
	
	<context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>
	       /WEB-INF/applicationContext-security.xml
	       /WEB-INF/applicationContext.xml
	   </param-value>
	</context-param>	
	
	<!-- can be overridden by setting vm argument -Dspring.profiles.active=prod -->
	<!-- if no profile is active the default profile will be used -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>dev</param-value>
	</context-param>
	
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>	

	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>umgrVaadinServlet</servlet-name>
		<servlet-class>com.vaadin.terminal.gwt.server.ApplicationServlet</servlet-class>
		<init-param>
			<description>Vaadin root</description>
			<param-name>root</param-name>
			<param-value>de.merten.umgr.web.UmgrRoot</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>umgrVaadinServlet</servlet-name>
		<url-pattern>/app/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>umgrVaadinServlet</servlet-name>
		<url-pattern>/VAADIN/*</url-pattern>
	</servlet-mapping>
  
    <!-- Damit nur eine Session pro User: (siehe auch http session management in appCtx-security.xml) -->
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>

	

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>	
  
  
<!-- 
	<resource-ref>
		<description>
		Datasource for abado umgr must be configured in tomcat conf/context.xml
	  </description>
		<res-ref-name>jdbc/umgr</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
 -->
</web-app>